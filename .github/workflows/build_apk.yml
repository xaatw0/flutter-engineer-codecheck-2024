name: build test apk
on:
  pull_request:
    types:
      - opened           # Pull Requestが作成されたとき
      - synchronize      # Pull Requestにコミットがpushされたとき
      - ready_for_review # draftからPRレビューに変わったとき
    branches: [ develop ]

env:
  APPLICATION_DIR: packages/github_browser_executable
  #SLACK_USERNAME: DeployBot
  #SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
  #SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  FLUTTER_VERSION: 3.24.0

jobs:
  build_and_deploy:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install package
        run: |
          dart pub global activate melos
          dart pub global activate fvm
          fvm install ${{ env.FLUTTER_VERSION }}
          fvm use --force
          melos init

      - name: flutter analyze
        run: melos analyze

      - name: flutter test
        run: melos test

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Build flutter apk for dev
        run: fvm flutter build apk --release --flavor=dev -t lib/main_dev.dart
        working-directory: ${{ env.APPLICATION_DIR }}

      - name: Build flutter apk for prod
        run:  fvm flutter build apk --release --flavor=prod -t lib/main_prod.dart
        working-directory: ${{ env.APPLICATION_DIR }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: upload-artifact
        with:
          name: android-apk
          path: packages/github_browser_executable/build/app/outputs/flutter-apk/*.apk
          retention-days: 10


          # - name: Slack Notification
          #  uses: rtCamp/action-slack-notify@v2
          #  env:
          #SLACK_TITLE: Deploy
          #SLACK_COLOR: ${{ job.status }}
          #SLACK_MESSAGE_ON_SUCCESS: GithubActionよりデプロイ完了しました [${{ github.event.pull_request.title }}]\n APK ${{ steps.upload-artifact.outputs.artifact-url }}
          #SLACK_MESSAGE_ON_FAILURE: GithubActionよりデプロイ失敗しました
          #SLACK_MESSAGE: GithubActionを実行
          #SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
